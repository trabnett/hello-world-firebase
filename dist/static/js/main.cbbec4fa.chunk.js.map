{"version":3,"sources":["components/layout/signed_in.js","store/actions/authActions.js","components/layout/signed_out.js","components/layout/navbar.js","components/dashboard/notifications.js","components/projects/project_summary.js","components/projects/project_list.js","components/dashboard/dashboard.js","components/projects/project_details.js","components/auth/sign_in.js","components/auth/sign_up.js","components/projects/create_project.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","style","float","marginRight","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","signed_in","signed_out","backgroundColor","height","color","lineHeight","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","className","project_summary","Dashboard","_this$props","this","project_list","dashboard_notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","eventHandler","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","marginTop","onSubmit","placeholder","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","require","config","App","navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbbec4fa.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\nconst SignedInLinks = (props) => {\n\n    return(\n        <ul style={{float: \"right\", marginRight: \"2em\"}}>\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a href=\"/\" onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/'></NavLink>{props.profile.initials}</li>\n        </ul>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(\nnull,\nmapDispatchToProps\n)\n(SignedInLinks);","export const signIn = (credentials) => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email, \n            credentials.password\n        ).then(()=>{\n            dispatch({type: 'LOGIN_SUCCESS'})\n        }).catch((err)=> {\n            dispatch({ type: 'LOGIN_ERR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS  '})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n            // dispatch({ type: 'SIGNIN_SUCCESS' })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nconst SignedOutLinks = () => {\n    return(\n        <ul style={{float: \"right\", marginRight: \"2em\"}}>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './signed_in'\nimport SignedOutLinks from './signed_out'\nimport { connect } from 'react-redux'\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return(\n        <nav style={{backgroundColor: \"grey\", height: \"5em\", color: \"black\"}}>\n            <div>\n                <Link to='/' style={{lineHeight: \"75px\"}}>home</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps = (state) => {\n    console.log(\"navbar\", state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport { isDeclareModule } from '@babel/types';\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props\n    return(\n        <div>\n            <div>\n                <span>Notifications</span>\n                <ul>\n                    {notifications && notifications.map(item => {\n                        return(\n                            <li key={item.id}>\n                                <span>{item.user}</span>\n                                <span>{item.content}</span>\n                                <div>{moment(item.time.toDate()).fromNow()}</div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    console.log(project, \"this is a project\")\n    return(\n        <div>\n            <h1>{project.title}</h1>\n            <p>posted by {project.authorFirstName}</p>\n            <p>{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './project_summary'\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n    return(\n        <div className=\"project-list\">\n            { projects && projects.map(project => {\n                return(\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './notifications';\nimport ProjectList from '../projects/project_list';\nimport { connect } from 'react-redux';\nimport { firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component{\n\n    render(){\n        // console.log(this.props)\n        const { projects, auth, notifications } = this.props\n        if (!auth.uid){\n            return <Redirect to='/signin' />\n        }\n        return(\n            <div className=\"dashboard container\">\n                <div>\n                    <ProjectList projects={projects}/>\n                </div>\n                <div>\n                    <Notifications notifications={notifications}/>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapPropsToState = (state) => {\n    console.log(state, \"in map state to props\")\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapPropsToState),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt', 'desc']}, \n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const id = props.match.params.id\n    const { project, auth } =  props\n    console.log(\"here\", props)\n    if (!auth.uid){\n        return <Redirect to='/signin' />\n    }\n    if (project){\n    return(\n        <div>\n            <h1>title {project.title}</h1>\n            <p>content {project.content}</p>\n            <p>user{project.authorFirstName} {project.authorLastName}</p>\n            <p>{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n    )\n    } else {\n        return (\n            <div>\n                <p>Loading Project</p>\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project : project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)\n(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    eventHandler = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        this.props.signIn(this.state)\n    }\n    handleChange = (e) => {\n        this.setState({[e.target.id]: e.target.value})\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid){\n            return <Redirect to='/' />\n        }\n        return (\n        <div style={{marginTop: \"10em\"}}>\n            <form onSubmit={this.eventHandler}>\n                <h1>Sign In</h1>\n                <input type=\"email\" id='email' placeholder=\"email\" onChange={this.handleChange}></input>\n                <input type=\"password\" id='password' placeholder=\"password\" onChange={this.handleChange}></input>\n                <div>\n                    <button>login</button>\n                </div>\n                <div style={{color: \"red\"}}>{ authError ? <p>{authError}</p> : null}</div>\n            </form>\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    }\n    eventHandler = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        this.props.signUp(this.state)\n\n    }\n    handleChange = (e) => {\n        this.setState({[e.target.id]: e.target.value})\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid){\n            return <Redirect to='/' />\n        }\n        return (\n        <div style={{marginTop: \"10em\"}}>\n            <form onSubmit={this.eventHandler}>\n                <h1>Sign Up</h1>\n                <input type=\"text\" id='firstName' placeholder=\"First Name\" onChange={this.handleChange}></input>\n                <input type=\"text\" id='lastName' placeholder=\"Last Name\" onChange={this.handleChange}></input>\n                <input type=\"email\" id='email' placeholder=\"email\" onChange={this.handleChange}></input>\n                <input type=\"password\" id='password' placeholder=\"password\" onChange={this.handleChange}></input>\n                <div>\n                    <button>sign up</button>\n                </div>\n                <div style={{color: \"red\"}}>{authError ? <p>{authError}</p> : null}</div>\n            </form>\n        </div>\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    eventHandler = (e) => {\n        e.preventDefault()\n        // console.log(this.state)\n        this.props.createProject(this.state)\n        this.setState({title: '', content: ''}, this.props.history.push('/'))\n    }\n    handleChange = (e) => {\n        this.setState({[e.target.id]: e.target.value})\n    }\n\n    render() {\n        const { auth } = this.props\n        if (!auth.uid){\n            return <Redirect to='/signin' />\n        }\n        return (\n        <div style={{marginTop: \"10em\"}}>\n            <form onSubmit={this.eventHandler}>\n                <h1>New Project</h1>\n                <label>Title</label>\n                <input type=\"text\" id='title' value={this.state.title} placeholder=\"title\" onChange={this.handleChange}></input>\n                <label>Project Content</label>\n                <textarea id='content' value={this.state.content} onChange={this.handleChange}></textarea>\n                <div>\n                    <button>create</button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        //make db call\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project})\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/project_details'\nimport SignIn from './components/auth/sign_in'\nimport SignUp from './components/auth/sign_up'\nimport CreateProject from './components/projects/create_project'\nrequire('dotenv').config()\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route path='/project/:id' component={ProjectDetails} />\n        <Route path='/signin' component={SignIn} />\n        <Route path='/signup' component={SignUp} />\n        <Route path='/create' component={CreateProject} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERR':\n            console.log('error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log(\"login success\")\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log(\"signout success\")\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: 1, title: \"hello\", content: \"asdf\"},\n        {id: 2, title: \"goodbye\", content: \"fdavv\"},\n        {id: 3, title: \"when\", content: \"veveveve\"}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"Create project error\", action.err)\n            return state\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\nfirebase.initializeApp(config);\nfirebase.firestore()\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n\n\n"],"sourceRoot":""}